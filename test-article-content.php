<?php

require __DIR__.'/vendor/autoload.php';

$app = require_once __DIR__.'/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
$kernel->bootstrap();

use App\Models\Article;
use App\Http\Controllers\Admin\ArticleController;

echo "üîç Test du contenu des articles\n";
echo "==============================\n\n";

try {
    // 1. V√©rifier la connexion √† la base de donn√©es
    echo "1. Test de connexion √† la base de donn√©es...\n";
    $connection = \DB::connection();
    $connection->getPdo();
    echo "‚úÖ Connexion √† la base de donn√©es : OK\n\n";
    
    // 2. Lister les articles existants
    echo "2. Articles existants dans la base de donn√©es...\n";
    $articles = Article::orderBy('created_at', 'desc')->limit(5)->get();
    
    if ($articles->count() > 0) {
        foreach ($articles as $article) {
            echo "   üìÑ {$article->title}\n";
            echo "      - ID: {$article->id}\n";
            echo "      - Slug: {$article->slug}\n";
            echo "      - Status: {$article->status}\n";
            echo "      - Contenu HTML: " . (strlen($article->content_html) > 100 ? 'OUI (' . strlen($article->content_html) . ' caract√®res)' : 'NON') . "\n";
            echo "      - Meta Title: " . ($article->meta_title ? 'OUI' : 'NON') . "\n";
            echo "      - Meta Description: " . ($article->meta_description ? 'OUI' : 'NON') . "\n";
            echo "      - Meta Keywords: " . ($article->meta_keywords ? 'OUI' : 'NON') . "\n";
            echo "\n";
        }
    } else {
        echo "   ‚ùå Aucun article trouv√©\n";
    }
    
    echo "\n";
    
    // 3. Test de g√©n√©ration d'un nouvel article
    echo "3. Test de g√©n√©ration d'un nouvel article...\n";
    
    $controller = new ArticleController();
    $reflection = new ReflectionClass($controller);
    $method = $reflection->getMethod('generateArticleContent');
    $method->setAccessible(true);
    
    $testTitle = "Hydrofuge : Comment prot√©ger efficacement vos surfaces de l'eau - Guide Complet 2024";
    $testKeyword = "hydrofuge protection";
    
    echo "   Titre de test: {$testTitle}\n";
    echo "   Mot-cl√©: {$testKeyword}\n";
    echo "   G√©n√©ration en cours...\n";
    
    $content = $method->invoke($controller, $testTitle, $testKeyword);
    
    if ($content && strlen($content) > 1000) {
        echo "   ‚úÖ Contenu g√©n√©r√© avec succ√®s (" . strlen($content) . " caract√®res)\n";
        
        // V√©rifier la structure HTML
        echo "   V√©rification de la structure:\n";
        
        if (strpos($content, '<div class="max-w-7xl') !== false) {
            echo "     ‚úÖ Container principal d√©tect√©\n";
        } else {
            echo "     ‚ùå Container principal manquant\n";
        }
        
        if (strpos($content, '<h1 class="text-4xl') !== false) {
            echo "     ‚úÖ Titre principal avec classes Tailwind\n";
        } else {
            echo "     ‚ùå Titre principal sans classes Tailwind\n";
        }
        
        if (strpos($content, '<div class="bg-white p-6') !== false) {
            echo "     ‚úÖ Sections avec classes Tailwind\n";
        } else {
            echo "     ‚ùå Sections sans classes Tailwind\n";
        }
        
        if (strpos($content, 'hydrofuge') !== false) {
            echo "     ‚úÖ Contenu sp√©cifique au sujet d√©tect√©\n";
        } else {
            echo "     ‚ùå Contenu g√©n√©rique\n";
        }
        
        // Sauvegarder le contenu g√©n√©r√©
        file_put_contents('test-article-content.html', $content);
        echo "     üìÑ Contenu sauvegard√© dans: test-article-content.html\n";
        
        // Afficher un aper√ßu du contenu
        echo "\n   Aper√ßu du contenu g√©n√©r√©:\n";
        $preview = strip_tags($content);
        $preview = substr($preview, 0, 200) . '...';
        echo "     " . $preview . "\n";
        
    } else {
        echo "   ‚ùå √âchec de la g√©n√©ration du contenu\n";
        echo "   Longueur: " . strlen($content) . " caract√®res\n";
    }
    
    echo "\n";
    
    // 4. Test de cr√©ation d'un article complet
    echo "4. Test de cr√©ation d'un article complet...\n";
    
    // V√©rifier si un article avec ce titre existe d√©j√†
    $existingArticle = Article::where('title', $testTitle)->first();
    if ($existingArticle) {
        echo "   ‚ö†Ô∏è  Article existant trouv√©, suppression...\n";
        $existingArticle->delete();
    }
    
    // Cr√©er un nouvel article
    $article = new Article();
    $article->title = $testTitle;
    $article->slug = \Str::slug($testTitle);
    $article->content_html = $content;
    $article->meta_title = $testTitle;
    $article->meta_description = 'D√©couvrez tout sur ' . $testTitle . ' : guide complet, conseils d\'experts, et informations d√©taill√©es.';
    $article->meta_keywords = 'hydrofuge, protection hydrophobe, imperm√©abilisation, √©tanch√©it√©, rev√™tement hydrofuge, traitement anti-eau, couverture imperm√©able, toiture r√©sistante √† l\'eau, traitement pr√©ventif contre l\'humidit√©, produit hydrofuge Dijon';
    $article->status = 'published';
    $article->published_at = now();
    $article->save();
    
    echo "   ‚úÖ Article cr√©√© avec succ√®s (ID: {$article->id})\n";
    echo "   üìÑ Contenu HTML: " . strlen($article->content_html) . " caract√®res\n";
    echo "   üè∑Ô∏è  Meta Title: " . strlen($article->meta_title) . " caract√®res\n";
    echo "   üìù Meta Description: " . strlen($article->meta_description) . " caract√®res\n";
    echo "   üîë Meta Keywords: " . strlen($article->meta_keywords) . " caract√®res\n";
    
    echo "\nüéØ R√©sum√© du test:\n";
    echo "==================\n";
    echo "‚úÖ Base de donn√©es: Connect√©e\n";
    echo "‚úÖ Articles existants: " . $articles->count() . " trouv√©s\n";
    echo "‚úÖ G√©n√©ration: " . (strlen($content) > 1000 ? 'R√©ussie' : '√âchec') . "\n";
    echo "‚úÖ Structure HTML: V√©rifi√©e\n";
    echo "‚úÖ Article cr√©√©: " . ($article->id ? 'OUI' : 'NON') . "\n";
    echo "‚úÖ Contenu enregistr√©: " . (strlen($article->content_html) > 1000 ? 'OUI' : 'NON') . "\n";
    echo "\nüí° Le syst√®me g√©n√®re bien le contenu HTML complet et l'enregistre en base !\n";
    echo "   Les m√©tadonn√©es sont g√©n√©r√©es EN PLUS du contenu HTML.\n";
    
} catch (Exception $e) {
    echo "‚ùå Erreur lors du test: " . $e->getMessage() . "\n";
    echo "Stack trace:\n" . $e->getTraceAsString() . "\n";
}
